@import "../components/common.scss";

comp-togglebutton {
    $basis: 2rem;
    $touchBasis: 2.5rem;

    display: flex;
    user-select: none;
    flex-direction: column;

    &.READ {
        filter: var(--readOpacityFilter);
        pointer-events: none;
    }

    &.NONE {
        display: none;
    }

    >span {
        color: var(--componentTextColor);
        margin-left: 0.3rem;
        margin-bottom: 0.1rem;

        .anim & {
            transition: color var(--colorTransitionType) var(--colorTransitionTime);
        }
    }

    >table {
        all: unset;
        display: table;
        position: relative;
        z-index: 1;
        width: 100%;
        table-layout: fixed;

        >tr {
            all: unset;
            display: table-row;
            color: var(--componentUnselectedTextColor);
            fill: var(--componentUnselectedSymbolColor);

            .anim & {
                transition: fill var(--colorTransitionType) var(--colorTransitionTime), color var(--colorTransitionType) var(--colorTransitionTime);
            }

            >td {
                all: unset;
                display: table-cell;
                box-sizing: border-box;

                >* {
                    display: flex;
                    flex-direction: row;
                    justify-content: center;
                    box-sizing: border-box;
                    align-items: center;
                    text-align: center;
                }

                >div {
                    word-wrap: break-word;
                    word-break: normal;
                }

                >svg {
                    margin: 0 auto 0 auto;
                }

                &.selected * {
                    color: var(--componentTextColor);

                    .anim & {
                        transition: color var(--colorTransitionType) var(--colorTransitionTime);
                    }
                }

                &.disabled {
                    filter: var(--readOpacityFilter);
                    pointer-events: none;
                }
            }

            &.br>td {
                background-color: var(--componentUnselectedBackGroundColor);
                position: relative;

                .anim & {
                    transition: background-color var(--colorTransitionType) var(--colorTransitionTime), box-shadow var(--colorTransitionType) var(--colorTransitionTime);
                }

                &:focus-visible::after {
                    content: '';
                    top: 0;
                    left: 0;
                    position: absolute;
                    width: 100%;
                    height: 100%;
                    border-radius: inherit;
                    z-index: 1;
                    box-shadow: var(--componentShadowFocus);
                }

                @media(hover: hover) and (pointer: fine) {
                    &:hover {
                        background-color: var(--componentHoverBackGroundColor);
                    }
                }

                &:only-child {
                    border-radius: var(--componentCornerRadius);
                }

                &:first-child {
                    border-radius: var(--componentCornerRadius) 0 0 var(--componentCornerRadius);
                }

                &:last-child {
                    border-radius: 0 var(--componentCornerRadius) var(--componentCornerRadius) 0;
                }

                >div {
                    height: $basis;
                    padding: 0.2rem;

                    .touch & {
                        height: $touchBasis;
                        padding: 0.3rem;
                    }

                    .anim & {
                        transition: height var(--sizeTransitionType) var(--sizeTransitionTime), color var(--colorTransitionType) var(--colorTransitionTime), padding var(--sizeTransitionType) var(--sizeTransitionTime), fill var(--colorTransitionType) var(--colorTransitionTime);
                    }
                }


                >svg {
                    height: $basis;
                    width: auto;
                    max-width: $basis * 2;
                    padding: 0.2rem;

                    .touch & {
                        height: $touchBasis;
                        max-width: $touchBasis * 2;
                        padding: 0.3rem;
                    }

                    .anim & {
                        transition: height var(--sizeTransitionType) var(--sizeTransitionTime), color var(--colorTransitionType) var(--colorTransitionTime), padding var(--sizeTransitionType) var(--sizeTransitionTime), fill var(--colorTransitionType) var(--colorTransitionTime);
                    }
                }

                &.selected {
                    box-shadow: inset 0 0 0px 1px var(--componentBorderColor);
                    background-color: var(--componentBackGroundColor);
                    position: relative;
                    box-shadow: inset 0 0 0px 1px var(--componentBorderColor), var(--componentShadowOut);
                    z-index: 1;

                    &:focus-visible::after {
                        content: '';
                        top: 0;
                        left: 0;
                        position: absolute;
                        width: 100%;
                        height: 100%;
                        border-radius: inherit;
                        z-index: 1;
                        box-shadow: var(--componentShadowFocus);
                    }

                    * {
                        fill: var(--componentSymbolColor);
                        padding: 0.15rem !important;

                        .anim & {
                            transition: height var(--sizeTransitionType) var(--sizeTransitionTime), color var(--colorTransitionType) var(--colorTransitionTime), padding var(--sizeTransitionType) var(--sizeTransitionTime), fill var(--colorTransitionType) var(--colorTransitionTime);
                        }
                    }
                }
            }
        }
    }
}