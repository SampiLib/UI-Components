@import "../components/common.scss";

comp-slider {
    $basis: 2rem;
    $touchBasis: 2.5rem;

    display: flex;
    flex-direction: column;
    user-select: none;

    &.READ {
        filter: var(--readOpacityFilter);
        pointer-events: none;
    }

    &.NONE {
        display: none;
    }

    >span {
        color: var(--componentTextColor);
        margin-left: 0.3rem;
        margin-bottom: 0.1rem;

        .anim & {
            transition: color var(--colorTransitionType) var(--colorTransitionTime);
        }
    }

    &.horz>div {
        min-width: 12rem;
        height: $basis;
        flex-direction: row;

        .touch & {
            height: $touchBasis;
        }

        .anim & {
            transition: height var(--sizeTransitionType) var(--sizeTransitionTime), background-color var(--colorTransitionType) var(--colorTransitionTime);
        }

        >div {
            height: 100%;
            left: 2.5rem;
            width: calc(100% - 5rem);

            >div {
                height: 100%;
                width: 5rem;
                transform: translateX(-50%);
            }
        }

        >svg.icon {
            height: 100%;
            width: auto;
            max-width: $basis;

            .touch & {
                max-width: $touchBasis;
            }

            .anim & {
                transition: height var(--sizeTransitionType) var(--sizeTransitionTime), max-width var(--sizeTransitionType) var(--sizeTransitionTime), padding var(--sizeTransitionType) var(--sizeTransitionTime), fill var(--colorTransitionType) var(--colorTransitionTime);
            }
        }
    }

    &.vert>div {

        min-height: 10rem;
        width: $basis;
        flex-direction: column;

        .touch & {
            width: $touchBasis;
        }

        .anim & {
            transition: width var(--sizeTransitionType) var(--sizeTransitionTime), background-color var(--colorTransitionType) var(--colorTransitionTime);
        }

        >div {
            width: 100%;
            top: 2.5rem;
            height: calc(100% - 5rem);

            >div {
                width: 100%;
                height: 5rem;
                transform: translateY(-50%);
            }
        }

        >svg.icon {
            width: 100%;
            height: auto;
            max-height: $basis;

            .touch & {
                max-height: $touchBasis;
            }

            .anim & {
                transition: height var(--sizeTransitionType) var(--sizeTransitionTime), max-height var(--sizeTransitionType) var(--sizeTransitionTime), padding var(--sizeTransitionType) var(--sizeTransitionTime), fill var(--colorTransitionType) var(--colorTransitionTime);
            }
        }
    }

    >div {
        position: relative;
        background-color: var(--componentUnselectedBackGroundColor);
        border-radius: var(--componentCornerRadius);
        display: flex;
        justify-content: space-between;

        >svg {
            padding: 0.3rem;
            border-radius: var(--componentCornerRadius);
            fill: var(--componentSymbolColor);

            .touch &.icon {
                padding: 0.4rem;
            }

            @media(hover: hover) and (pointer: fine) {
                &:hover {
                    background-color: var(--componentHoverBackGroundColor);
                }
            }
        }

        >div {
            position: absolute;

            >div {
                color: var(--componentTextColor);
                touch-action: none;
                position: absolute;
                background-color: var(--componentBackGroundColor);
                border-radius: var(--componentCornerRadius);
                display: flex;
                flex-direction: column;
                justify-content: center;
                text-align: center;
                user-select: none;
                box-shadow: inset 0 0 0px 1px var(--componentBorderColor), var(--componentShadowOut);
                outline: none;
                line-height: 0.8rem;
                box-sizing: border-box;

                >div {
                    font-size: 0.8rem;
                }

                .anim & {
                    transition: color var(--colorTransitionType) var(--colorTransitionTime), background-color var(--colorTransitionType) var(--colorTransitionTime), box-shadow var(--colorTransitionType) var(--colorTransitionTime);
                }

                @media(hover: hover) and (pointer: fine) {
                    &:hover {
                        background-color: var(--componentHoverBackGroundColor);
                    }

                    &:focus-visible::after {
                        content: '';
                        width: 100%;
                        height: 100%;
                        position: absolute;
                        z-index: 1;
                        border-radius: inherit;
                        box-shadow: var(--componentShadowFocus);
                    }
                }
            }
        }
    }
}