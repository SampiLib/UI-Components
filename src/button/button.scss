@import "../components/common.scss";

comp-button {
    $height: 2.5rem;
    $touchHeight: 3rem;

    display: flex;
    box-sizing: border-box;
    box-shadow: var(--componentShadowOut);
    user-select: none;
    border-radius: var(--componentCornerRadius);
    border: 1px solid var(--componentBorderColor);
    background-color: var(--componentBackGroundColor);
    position: relative;
    min-height: $height;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    padding: 0rem;
    min-width: min-content;

    .touch & {
        min-height: $touchHeight;
    }

    &:focus {
        outline: none;
    }

    @media(pointer: fine) {
        &:hover {
            background-color: var(--componentHoverBackGroundColor);
        }

        &:focus-visible {
            box-shadow: var(--componentShadowFocus), var(--componentShadowOut);
        }

        &.active {
            &:focus-visible {
                box-shadow: var(--componentShadowFocus), 0px 0px 3px 0px var(--componentBorderColor);
            }
        }
    }

    &.READ {
        filter: var(--readOpacityFilter);
        pointer-events: none;
    }

    &.NONE {
        display: none;
    }

    &.active {
        box-shadow: 0px 0px 3px 0px var(--componentBorderColor);
    }

    .anim & {
        transition: min-height var(--sizeTransitionType) var(--sizeTransitionTime), box-shadow ease 200ms, border-color var(--colorTransitionType) var(--colorTransitionTime), background-color var(--colorTransitionType) var(--colorTransitionTime);
    }

    >svg {
        height: $height;
        width: auto;
        max-width: $height + 1rem;
        padding: 0.4rem;
        flex-shrink: 0;
        background-color: initial;
        fill: var(--componentSymbolColor);

        .touch & {
            height: $touchHeight;
            max-width: $touchHeight + 1rem;
            padding: 0.6rem;
        }

        .anim & {
            transition: fill var(--colorTransitionType) var(--colorTransitionTime), height var(--sizeTransitionType) var(--sizeTransitionTime), max-width var(--sizeTransitionType) var(--sizeTransitionTime);
        }
    }

    >div {
        flex-grow: 1;
        color: var(--componentTextColor);
        text-align: center;

        &:not(:empty) {
            min-width: 6rem;
            padding: 0.2rem;
        }

        .anim & {
            transition: color var(--colorTransitionType) var(--colorTransitionTime);
        }
    }

    &[color="green"] {
        background-color: var(--componentGreenColor);
    }

    &[color="red"] {
        background-color: var(--componentRedColor);
    }

    &[color="blue"] {
        background-color: var(--componentBlueColor);
    }

    &[color="yellow"] {
        background-color: var(--componentYellowColor);
    }
}